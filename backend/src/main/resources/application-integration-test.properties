# Integration Test Configuration - Optimized for CI Pipeline Fast Startup
spring.application.name=guardianes-backend-integration

# Enable core components for integration testing
guardianes.jwt.enabled=true
guardianes.jpa.enabled=true

# H2 In-Memory Database Configuration with MySQL Compatibility
# Using H2 for fast CI startup while maintaining MySQL compatibility for migrations
spring.datasource.url=jdbc:h2:mem:integration_testdb;MODE=MySQL;DATABASE_TO_LOWER=TRUE;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE
spring.datasource.driver-class-name=org.h2.Driver
spring.datasource.username=sa
spring.datasource.password=
spring.jpa.database-platform=org.hibernate.dialect.H2Dialect

# H2 Console for debugging integration test issues
spring.h2.console.enabled=true
spring.h2.console.path=/h2-console
spring.h2.console.settings.web-allow-others=true

# Server configuration optimized for CI
server.port=8080
server.tomcat.threads.min-spare=2
server.tomcat.threads.max=8
server.tomcat.max-connections=20
server.tomcat.connection-timeout=10000
server.tomcat.keep-alive-timeout=5000

# Flyway Configuration - DISABLED for integration tests to avoid circular dependency
# Using JPA create-drop instead for fast integration testing
spring.flyway.enabled=false

# JPA Configuration optimized for integration testing
# Use create-drop for integration tests to avoid circular dependency with Flyway
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.properties.hibernate.use_sql_comments=false
spring.jpa.properties.hibernate.jdbc.time_zone=UTC
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=true
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.defer-datasource-initialization=true

# Disable external services for CI speed (can be overridden by environment variables)
spring.autoconfigure.exclude=\
  org.springframework.boot.autoconfigure.amqp.RabbitAutoConfiguration,\
  org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration

# Redis Configuration - will use localhost:6379 if available, fail gracefully if not
spring.data.redis.host=localhost
spring.data.redis.port=6379
spring.data.redis.timeout=1000ms
spring.data.redis.connect-timeout=2000ms

# Security configuration for integration testing
spring.security.user.name=integration
spring.security.user.password=integration_test_password
spring.security.user.roles=ADMIN

# JWT Configuration for Integration Tests
guardianes.jwt.secret=integration_test_secret_key_for_testing_purposes_only_minimum_256_bits_long
guardianes.jwt.expiration=86400000

# Optimized H2 connection pool for fast CI startup
spring.datasource.hikari.maximum-pool-size=3
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.idle-timeout=10000
spring.datasource.hikari.max-lifetime=30000
spring.datasource.hikari.connection-timeout=3000
spring.datasource.hikari.validation-timeout=1000
spring.datasource.hikari.initialization-fail-timeout=3000
spring.datasource.hikari.leak-detection-threshold=15000

# Actuator configuration for health checks and debugging
management.endpoints.web.exposure.include=health,info,metrics,flyway
management.endpoint.health.show-details=always
management.endpoint.health.enabled=true
management.endpoint.info.enabled=true
management.endpoint.flyway.enabled=true

# Disable problematic metrics that cause cgroup issues in Docker containers
# Note: SystemMetricsAutoConfiguration is excluded above to prevent ProcessorMetrics bean creation
management.metrics.binders.processor.enabled=false
management.metrics.system-metrics.processor.enabled=false

# Disable JVM platform metrics that cause cgroup NullPointerException in Docker
# This prevents the post-startup cgroup error: Cannot invoke jdk.internal.platform.CgroupInfo.getMountPoint()
management.metrics.binders.jvm.enabled=false
management.metrics.enable.all=false
management.metrics.enable.jvm=false

# Optimized logging for integration test debugging
logging.level.com.guardianes=INFO
logging.level.org.springframework.web=WARN
logging.level.org.springframework.boot=WARN
logging.level.org.hibernate.SQL=WARN
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=WARN
logging.level.com.zaxxer.hikari=INFO
logging.level.org.flywaydb=INFO
logging.level.h2database=WARN
logging.level.org.springframework.boot.autoconfigure=WARN

# Disable unnecessary Spring Boot features for faster startup
spring.main.allow-bean-definition-overriding=true
spring.main.lazy-initialization=false
spring.main.banner-mode=off
spring.jpa.open-in-view=false
spring.jpa.properties.hibernate.validator.apply_to_ddl=false
spring.jpa.properties.hibernate.validator.autoregister_listeners=false

# Integration test specific optimizations
spring.sql.init.mode=never
spring.jpa.generate-ddl=true
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false