FROM openjdk:17-jdk-slim AS builder

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy Maven wrapper and pom.xml
COPY mvnw mvnw
COPY .mvn .mvn
COPY pom.xml .

# Make Maven wrapper executable
RUN chmod +x mvnw

# Download dependencies (for better caching)  
RUN ./mvnw dependency:go-offline -B

# Copy source code
COPY src ./src

# Build the application
RUN ./mvnw clean package -DskipTests -B

# Production stage
FROM openjdk:17-jdk-slim

# Install curl for health checks
RUN apt-get update && apt-get install -y curl && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy the built JAR from builder stage
COPY --from=builder /app/target/guardianes-backend-*.jar app.jar

# Create application user
RUN groupadd -r appgroup && useradd -r -g appgroup appuser
RUN chown -R appuser:appgroup /app
USER appuser

# Expose ports
EXPOSE 8080 9090

# Health check with extended timeout for CI environments
HEALTHCHECK --interval=30s --timeout=20s --start-period=120s --retries=5 \
  CMD curl -f -u ci:ci_test http://localhost:8080/actuator/health || exit 1

# Run the application with optimized JVM flags for CI environments
CMD ["java", "-Xmx768m", "-Xms768m", "-XX:TieredStopAtLevel=1", "-XX:+UseSerialGC", "-Djava.awt.headless=true", "-Dspring.backgroundpreinitializer.ignore=true", "-Dspring.output.ansi.enabled=NEVER", "-jar", "app.jar"]