// Mocks generated by Mockito 5.4.6 from annotations
// in guardianes_mobile/test/features/walking/presentation/bloc/step_bloc_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i5;

import 'package:guardianes_mobile/features/walking/domain/entities/daily_step_aggregate.dart'
    as _i3;
import 'package:guardianes_mobile/features/walking/domain/entities/step_record.dart'
    as _i6;
import 'package:guardianes_mobile/features/walking/domain/repositories/step_repository.dart'
    as _i2;
import 'package:guardianes_mobile/features/walking/domain/usecases/get_current_steps.dart'
    as _i7;
import 'package:guardianes_mobile/features/walking/domain/usecases/get_step_history.dart'
    as _i8;
import 'package:guardianes_mobile/features/walking/domain/usecases/submit_steps.dart'
    as _i4;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeStepRepository_0 extends _i1.SmartFake
    implements _i2.StepRepository {
  _FakeStepRepository_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDailyStepAggregate_1 extends _i1.SmartFake
    implements _i3.DailyStepAggregate {
  _FakeDailyStepAggregate_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [SubmitSteps].
///
/// See the documentation for Mockito's code generation for more information.
class MockSubmitSteps extends _i1.Mock implements _i4.SubmitSteps {
  MockSubmitSteps() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StepRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeStepRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.StepRepository);

  @override
  _i5.Future<void> call(_i6.StepRecord? stepRecord) => (super.noSuchMethod(
        Invocation.method(
          #call,
          [stepRecord],
        ),
        returnValue: _i5.Future<void>.value(),
        returnValueForMissingStub: _i5.Future<void>.value(),
      ) as _i5.Future<void>);
}

/// A class which mocks [GetCurrentSteps].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetCurrentSteps extends _i1.Mock implements _i7.GetCurrentSteps {
  MockGetCurrentSteps() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StepRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeStepRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.StepRepository);

  @override
  _i5.Future<_i3.DailyStepAggregate> call(int? guardianId) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [guardianId],
        ),
        returnValue:
            _i5.Future<_i3.DailyStepAggregate>.value(_FakeDailyStepAggregate_1(
          this,
          Invocation.method(
            #call,
            [guardianId],
          ),
        )),
      ) as _i5.Future<_i3.DailyStepAggregate>);
}

/// A class which mocks [GetStepHistory].
///
/// See the documentation for Mockito's code generation for more information.
class MockGetStepHistory extends _i1.Mock implements _i8.GetStepHistory {
  MockGetStepHistory() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i2.StepRepository get repository => (super.noSuchMethod(
        Invocation.getter(#repository),
        returnValue: _FakeStepRepository_0(
          this,
          Invocation.getter(#repository),
        ),
      ) as _i2.StepRepository);

  @override
  _i5.Future<List<_i3.DailyStepAggregate>> call(
    int? guardianId,
    String? fromDate,
    String? toDate,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #call,
          [
            guardianId,
            fromDate,
            toDate,
          ],
        ),
        returnValue: _i5.Future<List<_i3.DailyStepAggregate>>.value(
            <_i3.DailyStepAggregate>[]),
      ) as _i5.Future<List<_i3.DailyStepAggregate>>);
}
