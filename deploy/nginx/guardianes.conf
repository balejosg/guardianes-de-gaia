# Guardianes de Gaia - Multi-Environment Nginx Configuration
# Manages traffic routing for dev, staging, and production environments
# Domain mapping:
# - dev-guardianes.duckdns.org → localhost:8090 (development)
# - stg-guardianes.duckdns.org → localhost:8081 (staging)
# - guardianes.duckdns.org → localhost:8082 (production)

# Rate limiting zones
limit_req_zone $binary_remote_addr zone=api_limit:10m rate=10r/s;
limit_req_zone $binary_remote_addr zone=auth_limit:10m rate=5r/s;

# Log format for better monitoring
log_format detailed '$remote_addr - $remote_user [$time_local] '
                   '"$request" $status $body_bytes_sent '
                   '"$http_referer" "$http_user_agent" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time" '
                   'env=$env_name';

# Development Environment - dev-guardianes.duckdns.org
server {
    listen 80;
    listen [::]:80;
    server_name dev-guardianes.duckdns.org;
    
    # Set environment variable for logging
    set $env_name "development";
    
    # Enable detailed logging for development
    access_log /var/log/nginx/dev-guardianes-access.log detailed;
    error_log /var/log/nginx/dev-guardianes-error.log debug;
    
    # Security headers (basic for development)
    add_header X-Frame-Options SAMEORIGIN always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    
    # Backend API with rate limiting
    location /api/ {
        limit_req zone=api_limit burst=20 nodelay;
        
        proxy_pass http://127.0.0.1:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "development";
        
        # Timeout configuration
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer configuration
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Authentication endpoints with stricter rate limiting
    location /api/auth/ {
        limit_req zone=auth_limit burst=10 nodelay;
        
        proxy_pass http://127.0.0.1:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "development";
    }
    
    # Health check endpoint
    location /actuator/health {
        proxy_pass http://127.0.0.1:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache health checks for 30 seconds
        proxy_cache_valid 200 30s;
        add_header X-Cache $upstream_cache_status;
    }
    
    # Grafana dashboard (development only)
    location /grafana/ {
        proxy_pass http://127.0.0.1:3000/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Prometheus metrics (development only)
    location /prometheus/ {
        proxy_pass http://127.0.0.1:9091/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:8090;
        proxy_set_header Host $host;
        
        expires 1h;
        add_header Cache-Control "public, immutable";
        add_header X-Environment "development";
    }
    
    # Default location
    location / {
        proxy_pass http://127.0.0.1:8090;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "development";
    }
}

# Staging Environment - stg-guardianes.duckdns.org
server {
    listen 80;
    listen [::]:80;
    server_name stg-guardianes.duckdns.org;
    
    # Set environment variable for logging
    set $env_name "staging";
    
    # Production-like logging for staging
    access_log /var/log/nginx/stg-guardianes-access.log detailed;
    error_log /var/log/nginx/stg-guardianes-error.log warn;
    
    # Enhanced security headers for staging
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'" always;
    
    # Backend API with rate limiting
    location /api/ {
        limit_req zone=api_limit burst=15 nodelay;
        
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "staging";
        
        # Timeout configuration
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
        
        # Buffer configuration
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
    }
    
    # Authentication endpoints with stricter rate limiting
    location /api/auth/ {
        limit_req zone=auth_limit burst=8 nodelay;
        
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "staging";
    }
    
    # Health check endpoint
    location /actuator/health {
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache health checks for 30 seconds
        proxy_cache_valid 200 30s;
        add_header X-Cache $upstream_cache_status;
    }
    
    # Limited monitoring access for staging
    location /grafana/ {
        # Basic authentication for staging monitoring
        auth_basic "Staging Monitoring";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        proxy_pass http://127.0.0.1:3001/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }
    
    # Static assets with caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        
        expires 6h;
        add_header Cache-Control "public, immutable";
        add_header X-Environment "staging";
    }
    
    # Default location
    location / {
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "staging";
    }
}

# Production Environment - guardianes.duckdns.org
server {
    listen 80;
    listen [::]:80;
    server_name guardianes.duckdns.org;
    
    # Redirect all HTTP to HTTPS in production
    return 301 https://$server_name$request_uri;
}

server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name guardianes.duckdns.org;
    
    # Set environment variable for logging
    set $env_name "production";
    
    # SSL Configuration
    ssl_certificate /etc/letsencrypt/live/guardianes.duckdns.org/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/guardianes.duckdns.org/privkey.pem;
    ssl_trusted_certificate /etc/letsencrypt/live/guardianes.duckdns.org/chain.pem;
    
    # SSL Security Settings
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512:ECDHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_tickets off;
    ssl_stapling on;
    ssl_stapling_verify on;
    
    # Production logging (less verbose)
    access_log /var/log/nginx/prod-guardianes-access.log detailed;
    error_log /var/log/nginx/prod-guardianes-error.log error;
    
    # Maximum security headers for production
    add_header Strict-Transport-Security "max-age=63072000; includeSubDomains; preload" always;
    add_header X-Frame-Options DENY always;
    add_header X-Content-Type-Options nosniff always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Content-Security-Policy "default-src 'self'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self'" always;
    add_header Permissions-Policy "geolocation=(), microphone=(), camera=()" always;
    
    # Backend API with production rate limiting
    location /api/ {
        limit_req zone=api_limit burst=10 nodelay;
        
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "production";
        
        # Production timeout configuration
        proxy_connect_timeout 10s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
        
        # Production buffer configuration
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;
        
        # Hide server information
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
    
    # Authentication endpoints with strict rate limiting
    location /api/auth/ {
        limit_req zone=auth_limit burst=5 nodelay;
        
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "production";
        
        # Additional security for auth endpoints
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
    
    # Health check endpoint (limited exposure)
    location = /actuator/health {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        
        # Cache health checks for 1 minute
        proxy_cache_valid 200 60s;
        add_header X-Cache $upstream_cache_status;
    }
    
    # Block access to detailed actuator endpoints in production
    location /actuator/ {
        return 403;
    }
    
    # No monitoring access in production (use internal monitoring)
    location /grafana/ {
        return 404;
    }
    
    location /prometheus/ {
        return 404;
    }
    
    # Static assets with aggressive caching
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Environment "production";
        
        # Additional compression
        gzip_static on;
        gzip_vary on;
    }
    
    # Default location
    location / {
        proxy_pass http://127.0.0.1:8082;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Environment "production";
        
        # Hide server information
        proxy_hide_header X-Powered-By;
        proxy_hide_header Server;
    }
}

# Note: Default server block removed to avoid conflict with OMV web GUI
# OMV already has a default server on port 80
# Our specific domain servers above will handle the Guardianes domains