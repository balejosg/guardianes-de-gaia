name: 🔨 Flutter APK Build

on:
  push:
    branches: [main, develop]
    paths:
      - 'mobile/**'
      - '.github/workflows/flutter-build.yml'
  pull_request:
    branches: [main]
    paths:
      - 'mobile/**'
  workflow_dispatch:
    inputs:
      build_mode:
        description: 'Build mode'
        required: false
        default: 'debug'
        type: choice
        options:
          - debug
          - release

jobs:
  build-apk:
    name: 📱 Build Android APK
    runs-on: self-hosted
    defaults:
      run:
        working-directory: mobile/guardianes_mobile

    steps:
      - name: 🧹 Pre-build Cleanup
        run: |
          echo "🧹 Cleaning up previous build artifacts..."
          
          # Clean Flutter build cache and ephemeral files with proper permissions
          echo "🗑️ Cleaning Flutter ephemeral directories..."
          sudo find /datos_nvme/run0/actions-runner/_work -name "ephemeral" -type d -exec rm -rf {} + 2>/dev/null || true
          sudo find /datos_nvme/run0/actions-runner/_work -name ".plugin_symlinks" -type d -exec rm -rf {} + 2>/dev/null || true
          sudo find /datos_nvme/run0/actions-runner/_work -name "build" -type d -path "*/mobile/guardianes_mobile/*" -exec rm -rf {} + 2>/dev/null || true
          
          # Ensure proper workspace ownership
          sudo chown -R run0:run0 /datos_nvme/run0/actions-runner/_work/guardianes-de-gaia 2>/dev/null || true
          
          echo "✅ Cleanup completed"

      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          clean: true
          submodules: false
          fetch-depth: 1

      - name: 🔧 Setup Flutter Environment
        run: |
          echo "🔧 Setting up Flutter environment..."
          export PATH="/datos_nvme/run0/guardianes-de-gaia/flutter-3.19.6/bin:$PATH"
          flutter --version
          flutter doctor

      - name: 🔨 Build APK
        run: |
          BUILD_MODE="${{ github.event.inputs.build_mode || 'debug' }}"
          echo "🏗️ Building Android APK in $BUILD_MODE mode..."
          
          # Set Flutter path
          export PATH="/datos_nvme/run0/guardianes-de-gaia/flutter-3.19.6/bin:$PATH"
          
          # Get dependencies
          echo "📦 Getting Flutter dependencies..."
          flutter pub get
          
          # Clean previous builds
          echo "🧹 Cleaning previous builds..."
          flutter clean
          
          # Generate code if needed
          echo "🏗️ Generating code..."
          /datos_nvme/run0/guardianes-de-gaia/flutter-3.19.6/bin/dart run build_runner build --delete-conflicting-outputs || echo 'Code generation completed with warnings'
          
          # Build APK
          if [ "$BUILD_MODE" = "release" ]; then
            flutter build apk --release --verbose
          else
            flutter build apk --debug --verbose
          fi
          
          # Verify APK was created
          if [ ! -d "build/app/outputs/flutter-apk/" ]; then
            echo "❌ APK build failed - output directory not found"
            exit 1
          fi
          
          echo "✅ APK build completed"
          ls -la build/app/outputs/flutter-apk/

      - name: 📱 Upload APK Artifact
        uses: actions/upload-artifact@v4
        with:
          name: guardianes-mobile-${{ github.event.inputs.build_mode || 'debug' }}-${{ github.sha }}
          path: mobile/guardianes_mobile/build/app/outputs/flutter-apk/*.apk
          retention-days: 30

      - name: 📊 APK Build Summary
        run: |
          echo "## 📱 APK Build Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Build Mode:** ${{ github.event.inputs.build_mode || 'debug' }}" >> $GITHUB_STEP_SUMMARY
          echo "**Commit:** ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
          echo "**Branch:** ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "build/app/outputs/flutter-apk/app-debug.apk" ]; then
            APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-debug.apk | cut -f1)
            echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "**APK Path:** build/app/outputs/flutter-apk/app-debug.apk" >> $GITHUB_STEP_SUMMARY
          elif [ -f "build/app/outputs/flutter-apk/app-release.apk" ]; then
            APK_SIZE=$(du -h build/app/outputs/flutter-apk/app-release.apk | cut -f1)
            echo "**APK Size:** $APK_SIZE" >> $GITHUB_STEP_SUMMARY
            echo "**APK Path:** build/app/outputs/flutter-apk/app-release.apk" >> $GITHUB_STEP_SUMMARY
          fi
          
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "✅ **APK build completed successfully!**" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "📲 **Installation Instructions:**" >> $GITHUB_STEP_SUMMARY
          echo "1. Download the APK from the artifacts section above" >> $GITHUB_STEP_SUMMARY
          echo "2. Enable 'Unknown Sources' in your Android device settings" >> $GITHUB_STEP_SUMMARY
          echo "3. Install the APK on your device" >> $GITHUB_STEP_SUMMARY
          echo "4. The app will connect to: **dev-guardianes.duckdns.org:8080**" >> $GITHUB_STEP_SUMMARY

  test-apk:
    name: 🧪 APK Integration Tests
    runs-on: self-hosted
    needs: build-apk
    if: success()
    defaults:
      run:
        working-directory: mobile/guardianes_mobile

    steps:
      - name: 📥 Checkout code
        uses: actions/checkout@v4
        with:
          clean: true
          submodules: false
          fetch-depth: 1

      - name: 📱 Download APK
        uses: actions/download-artifact@v4
        with:
          name: guardianes-mobile-${{ github.event.inputs.build_mode || 'debug' }}-${{ github.sha }}
          path: ./apk

      - name: 🔍 Verify APK
        run: |
          echo "## 🔍 APK Verification" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          if [ -f "./apk/app-debug.apk" ] || [ -f "./apk/app-release.apk" ]; then
            echo "✅ **APK file found and verified**" >> $GITHUB_STEP_SUMMARY
            ls -la ./apk/*.apk >> $GITHUB_STEP_SUMMARY || true
          else
            echo "❌ **APK file not found**" >> $GITHUB_STEP_SUMMARY
            ls -la ./apk/ >> $GITHUB_STEP_SUMMARY || true
          fi

      - name: 🚀 Ready for Installation
        run: |
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "## 🚀 Ready for Installation!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Your Guardianes de Gaia APK is ready to install on your smartphone!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "**Backend Connection:** http://dev-guardianes.duckdns.org:8080" >> $GITHUB_STEP_SUMMARY
          echo "**Test Credentials:** admin / dev123" >> $GITHUB_STEP_SUMMARY