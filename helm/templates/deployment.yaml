apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "guardianes-de-gaia.fullname" . }}-backend
  labels:
    {{- include "guardianes-de-gaia.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  {{- if not .Values.backend.autoscaling.enabled }}
  replicas: {{ .Values.backend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "guardianes-de-gaia.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: backend
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
        prometheus.io/scrape: "true"
        prometheus.io/path: "/actuator/prometheus"
        prometheus.io/port: "8080"
      labels:
        {{- include "guardianes-de-gaia.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- with .Values.global.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "guardianes-de-gaia.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.backend.podSecurityContext | nindent 8 }}
      containers:
        - name: backend
          securityContext:
            {{- toYaml .Values.backend.securityContext | nindent 12 }}
          image: "{{ .Values.backend.image.registry }}/{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: 8080
              protocol: TCP
            - name: actuator
              containerPort: 8080
              protocol: TCP
          livenessProbe:
            {{- toYaml .Values.backend.livenessProbe | nindent 12 }}
          readinessProbe:
            {{- toYaml .Values.backend.readinessProbe | nindent 12 }}
          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}
          env:
            {{- range .Values.backend.env }}
            - name: {{ .name }}
              value: {{ .value | quote }}
            {{- end }}
            # Database configuration (support both internal and external)
            {{- if .Values.mysql.enabled }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ include "guardianes-de-gaia.mysql.fullname" . }}:3306/{{ .Values.mysql.auth.database }}"
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.mysql.auth.username }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: mysql-password
            {{- else if .Values.externalDatabase }}
            - name: SPRING_DATASOURCE_URL
              value: "jdbc:mysql://{{ .Values.externalDatabase.host }}:{{ .Values.externalDatabase.port }}/{{ .Values.externalDatabase.database }}"
            - name: SPRING_DATASOURCE_USERNAME
              value: {{ .Values.externalDatabase.username }}
            - name: SPRING_DATASOURCE_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: external-db-password
            {{- end }}
            # Redis configuration (support both internal and external)
            {{- if .Values.redis.enabled }}
            - name: SPRING_REDIS_HOST
              value: {{ include "guardianes-de-gaia.redis.fullname" . }}-master
            - name: SPRING_REDIS_PORT
              value: "6379"
            {{- if .Values.redis.auth.enabled }}
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: redis-password
            {{- end }}
            {{- else if .Values.externalRedis }}
            - name: SPRING_REDIS_HOST
              value: {{ .Values.externalRedis.host }}
            - name: SPRING_REDIS_PORT
              value: {{ .Values.externalRedis.port | quote }}
            - name: SPRING_REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: external-redis-password
            {{- end }}
            # RabbitMQ configuration (support both internal and external)
            {{- if .Values.rabbitmq.enabled }}
            - name: SPRING_RABBITMQ_HOST
              value: {{ include "guardianes-de-gaia.rabbitmq.fullname" . }}
            - name: SPRING_RABBITMQ_PORT
              value: "5672"
            - name: SPRING_RABBITMQ_USERNAME
              value: {{ .Values.rabbitmq.auth.username }}
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: rabbitmq-password
            {{- else if .Values.externalRabbitmq }}
            - name: SPRING_RABBITMQ_HOST
              value: {{ .Values.externalRabbitmq.host }}
            - name: SPRING_RABBITMQ_PORT
              value: {{ .Values.externalRabbitmq.port | quote }}
            - name: SPRING_RABBITMQ_USERNAME
              value: {{ .Values.externalRabbitmq.username }}
            - name: SPRING_RABBITMQ_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: external-rabbitmq-password
            {{- end }}
            # JWT Secret
            - name: JWT_SECRET
              valueFrom:
                secretKeyRef:
                  name: {{ include "guardianes-de-gaia.secretName" . }}
                  key: jwt-secret
          envFrom:
            - configMapRef:
                name: {{ .Values.backend.configMapRef }}
          volumeMounts:
            - name: tmp
              mountPath: /tmp
            - name: logs
              mountPath: /app/logs
            {{- if .Values.config.application }}
            - name: config
              mountPath: /app/config
              readOnly: true
            {{- end }}
      volumes:
        - name: tmp
          emptyDir: {}
        - name: logs
          emptyDir: {}
        {{- if .Values.config.application }}
        - name: config
          configMap:
            name: {{ include "guardianes-de-gaia.fullname" . }}-config
        {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
---
{{- if .Values.backend.autoscaling.enabled }}
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: {{ include "guardianes-de-gaia.fullname" . }}-backend
  labels:
    {{- include "guardianes-de-gaia.labels" . | nindent 4 }}
    app.kubernetes.io/component: backend
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: {{ include "guardianes-de-gaia.fullname" . }}-backend
  minReplicas: {{ .Values.backend.autoscaling.minReplicas }}
  maxReplicas: {{ .Values.backend.autoscaling.maxReplicas }}
  metrics:
    {{- if .Values.backend.autoscaling.targetCPUUtilizationPercentage }}
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: {{ .Values.backend.autoscaling.targetCPUUtilizationPercentage }}
    {{- end }}
    {{- if .Values.backend.autoscaling.targetMemoryUtilizationPercentage }}
    - type: Resource
      resource:
        name: memory
        target:
          type: Utilization
          averageUtilization: {{ .Values.backend.autoscaling.targetMemoryUtilizationPercentage }}
    {{- end }}
{{- end }}