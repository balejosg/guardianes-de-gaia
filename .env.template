# =============================================================================
# GUARDIANES DE GAIA - ENVIRONMENT VARIABLES TEMPLATE
# =============================================================================
# 
# SECURITY NOTICE: This is a template file. DO NOT commit actual secrets to git.
# Copy this file to .env and fill in your actual values.
# 
# IMPORTANT: All passwords should be at least 32 characters with mixed case,
# numbers, and special characters. Use a password manager or generator.
#
# =============================================================================

# =============================================================================
# DATABASE CONFIGURATION
# =============================================================================

# MySQL Database Credentials
# SECURITY: Generate strong passwords using: openssl rand -base64 32
DB_USER=guardianes
DB_PASSWORD=REPLACE_WITH_SECURE_32_CHAR_PASSWORD
DB_ROOT_PASSWORD=REPLACE_WITH_SECURE_32_CHAR_ROOT_PASSWORD

# Database Connection
MYSQL_HOST=mysql
MYSQL_PORT=3306

# =============================================================================
# MESSAGE BROKER CONFIGURATION
# =============================================================================

# RabbitMQ Credentials
# SECURITY: Use different credentials than database
RABBITMQ_USER=guardianes
RABBITMQ_PASSWORD=REPLACE_WITH_SECURE_32_CHAR_RABBITMQ_PASSWORD
RABBITMQ_HOST=rabbitmq
RABBITMQ_PORT=5672

# =============================================================================
# CACHE CONFIGURATION
# =============================================================================

# Redis Configuration
REDIS_HOST=redis
REDIS_PORT=6379

# =============================================================================
# MONITORING & OBSERVABILITY
# =============================================================================

# Grafana Admin Credentials
# SECURITY: Never use default admin/admin in production
GRAFANA_USER=admin
GRAFANA_PASSWORD=REPLACE_WITH_SECURE_32_CHAR_GRAFANA_PASSWORD

# Prometheus Basic Auth (for backend metrics endpoint)
PROMETHEUS_USERNAME=metrics_user
PROMETHEUS_PASSWORD=REPLACE_WITH_SECURE_32_CHAR_PROMETHEUS_PASSWORD

# =============================================================================
# APPLICATION SECURITY
# =============================================================================

# JWT Configuration
# SECURITY: Generate with: openssl rand -base64 64 - must be 64 characters
JWT_SECRET=REPLACE_WITH_SECURE_64_CHAR_JWT_SECRET
JWT_EXPIRATION=86400

# Admin User Credentials
# SECURITY: Create proper admin user management instead of hardcoded credentials
ADMIN_USERNAME=admin
ADMIN_PASSWORD=REPLACE_WITH_SECURE_32_CHAR_ADMIN_PASSWORD

# Rate Limiting
RATE_LIMIT_ENABLED=true
RATE_LIMIT_REQUESTS_PER_MINUTE=100

# =============================================================================
# ENVIRONMENT CONFIGURATION
# =============================================================================

# Spring Profile (dev, prod, test)
SPRING_PROFILES_ACTIVE=dev

# Timezone
TZ=Europe/Madrid

# =============================================================================
# SECURITY GUIDELINES
# =============================================================================
#
# 1. PASSWORD GENERATION:
#    - Use: openssl rand -base64 32 (for 32-char passwords)
#    - Use: openssl rand -base64 64 (for JWT secrets)
#    - Alternative: Use a password manager with 32+ character passwords
#
# 2. ENVIRONMENT-SPECIFIC FILES:
#    - .env.local (for local development)
#    - .env.staging (for staging environment)  
#    - .env.prod (for production environment)
#
# 3. NEVER COMMIT:
#    - .env files with actual secrets
#    - Backup files containing credentials
#    - Screenshots or logs with visible passwords
#
# 4. PRODUCTION REQUIREMENTS:
#    - All passwords must be 32+ characters
#    - Use different passwords for each service
#    - Enable SSL/TLS for all connections
#    - Rotate passwords regularly (quarterly)
#
# 5. DEVELOPMENT GUIDELINES:
#    - Use .env.local for local development
#    - Share .env.template (this file) with team
#    - Document any new environment variables here
#
# =============================================================================

# Example password generation commands:
# openssl rand -base64 32
# openssl rand -base64 64
# python3 -c "import secrets; print(secrets.token_urlsafe(32))"